import sys

def bfs(graph, visit, N, M, st):
    queue=[]
    queue.append(st)
    visit[st]=1
    while True:
        if len(queue)==0:
            break
        a=queue.pop(0)
        for i in range(1, N+1):
            if graph[a][i]==1 and visit[i]==0:
                queue.append(i)
                visit[i]=1


N,M=map(int, sys.stdin.readline().split())

graph=[]
for i in range(N+1):
    tmp=[]
    for j in range(N+1):
        tmp.append(0)
    graph.append(tmp)
for i in range(M):
    st,ed=map(int, sys.stdin.readline().split())
    graph[st][ed]=1
    graph[ed][st]=1

count=0
visit=[]
for i in range(N+1):
    visit.append(0)
for i in range(1, N+1):
    if visit[i]==0:
        bfs(graph, visit, N, M, i)
        count=count+1

print(count)
