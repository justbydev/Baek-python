import sys

sys.setrecursionlimit(10**6)

def dfs(graph, visit, st, color):
    visit[st]=color
    for i in range(len(graph[st])):
        temp=graph[st][i]
        if visit[temp]==0:
            dfs(graph, visit, temp, 3-color)
            

testcase=int(sys.stdin.readline())
res=[]
for a in range(testcase):
    V,E=map(int, sys.stdin.readline().split())
    graph=[]
    for i in range(V+1):
        graph.append([])
    for i in range(E):
        st,ed=map(int, sys.stdin.readline().split())
        graph[st].append(ed)
        graph[ed].append(st)
    visit=[]
    for i in range(V+1):
        visit.append(0)
    for i in range(1, V+1):
        if visit[i]==0:
            dfs(graph, visit, i, 1)
    flag=0
    for i in range(1, V+1):
        for j in range(len(graph[i])):
            if visit[i]==visit[graph[i][j]]:
                flag=1
                break
        if flag==1:
            break
    if flag==0:
        res.append(1)
    elif flag==1:
        res.append(0)
    graph.clear()
    visit.clear()
for i in range(testcase):
    if res[i]==0:
        print('NO')
    elif res[i]==1:
        print('YES')
