import sys

sys.setrecursionlimit(10**8)

def dfs(Map, visit, i, j, w, h):
    visit[i][j]=1
    if j-1>=0 and visit[i][j-1]==0 and Map[i][j-1]==1:
        dfs(Map, visit, i, j-1, w, h)
    if i+1<h and j-1>=0 and visit[i+1][j-1]==0 and Map[i+1][j-1]==1:
        dfs(Map, visit, i+1, j-1, w, h)
    if i+1<h and visit[i+1][j]==0 and Map[i+1][j]==1:
        dfs(Map, visit, i+1, j, w, h)
    if i+1<h and j+1<w and visit[i+1][j+1]==0 and Map[i+1][j+1]==1:
        dfs(Map, visit, i+1, j+1, w, h)
    if j+1<w and visit[i][j+1]==0 and Map[i][j+1]==1:
        dfs(Map, visit, i, j+1, w, h)
    if i-1>=0 and j+1<w and visit[i-1][j+1]==0 and Map[i-1][j+1]==1:
        dfs(Map, visit, i-1, j+1, w, h)
    if i-1>=0 and visit[i-1][j]==0 and Map[i-1][j]==1:
        dfs(Map, visit, i-1, j, w, h)
    if i-1>=0 and j-1>=0 and visit[i-1][j-1]==0 and Map[i-1][j-1]==1:
        dfs(Map, visit, i-1, j-1, w, h)

res=[]
while True:
    w,h=map(int, sys.stdin.readline().split())
    if w==0 and h==0:
        break
    Map=[]
    for i in range(h):
        tmp=list(map(int, sys.stdin.readline().split()))
        Map.append(tmp)
    visit=[]
    for i in range(h):
        tmp=[0]*w
        visit.append(tmp)
    count=0
    for i in range(h):
        for j in range(w):
            if visit[i][j]==0 and Map[i][j]==1:
                dfs(Map, visit, i, j, w, h)
                count=count+1
    res.append(count)

for i in range(len(res)):
    print(res[i])