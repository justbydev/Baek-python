import sys
from collections import deque

def floyd_warshall(N, distance):
    for i in range(N):
        for j in range(N):
            for k in range(j+1, N):
                distance[j][k]=min(distance[j][k], distance[j][i]+distance[i][k])
                distance[k][j]=distance[j][k]
N,T=map(int, sys.stdin.readline().split())
city=[]
for i in range(1, N+1):
    s,x,y=map(int, sys.stdin.readline().split())
    city.append([s,x,y])
distance=[[0]*N for _ in range(N)]
for i in range(N):
    for j in range(i+1, N):
        distance[i][j]=abs(city[i][1]-city[j][1])+abs(city[i][2]-city[j][2])
        distance[j][i]=distance[i][j]
        if city[i][0]==1 and city[j][0]==1:
            distance[i][j]=min(distance[i][j], T)
            distance[j][i]=distance[i][j]
M=int(sys.stdin.readline())
floyd_warshall(N, distance)
for _ in range(M):
    A,B=map(int, sys.stdin.readline().split())
    print(distance[A-1][B-1])