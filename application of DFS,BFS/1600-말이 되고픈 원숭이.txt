import sys
from collections import deque

def bfs(K, W, H, mp):
    queue=deque()
    count=deque()
    queue.append([0,0,0])
    count.append(0)
    visit=[[[0]*W for _ in range(H)] for _ in range(K+1)]
    visit[0][0][0]=1
    dx=[0,-1,0,1]
    dy=[-1,0,1,0]
    hx=[-1,-2,-2,-1,1,2,2,1]
    hy=[-2,-1,1,2,2,1,-1,-2]
    while queue:
        now=queue.popleft()
        cnt=count.popleft()
        for i in range(4):
            nowx=now[0]+dx[i]
            nowy=now[1]+dy[i]
            if nowx==H-1 and nowy==W-1:
                return cnt+1
            if nowx<0 or nowx>=H or nowy<0 or nowy>=W or mp[nowx][nowy]==1:
                continue
            if visit[now[2]][nowx][nowy]==1:
                continue
            queue.append([nowx, nowy, now[2]])
            count.append(cnt+1)
            visit[now[2]][nowx][nowy]=1
        if now[2]<K:
            for i in range(8):
                nowx=now[0]+hx[i]
                nowy=now[1]+hy[i]
                if nowx==H-1 and nowy==W-1:
                    return cnt+1
                if nowx<0 or nowx>=H or nowy<0 or nowy>=W or mp[nowx][nowy]==1:
                    continue
                if visit[now[2]+1][nowx][nowy]==1:
                    continue
                queue.append([nowx, nowy, now[2]+1])
                count.append(cnt+1)
                visit[now[2]+1][nowx][nowy]=1
    return -1

K=int(sys.stdin.readline())
W,H=map(int, sys.stdin.readline().split())
mp=[]
if W==1 and H==1:
    print(0)
else:
    for _ in range(H):
        mp.append(list(map(int, sys.stdin.readline().split())))
    print(bfs(K,W,H,mp))