import sys
from collections import deque
def bfs(res, mp, stx, sty, visit):
    queue=deque()
    queue.append([stx, sty, str(mp[stx][sty])])
    count=deque()
    count.append(1)
    dx=[0, -1, 0, 1]
    dy=[-1, 0, 1, 0]
    while queue:
        now=queue.popleft()
        cnt=count.popleft()
        if cnt>=6:
            break
        for i in range(4):
            nowx=now[0]+dx[i]
            nowy=now[1]+dy[i]
            if nowx<0 or nowx>=5 or nowy<0 or nowy>=5:
                continue
            nst=now[2]+str(mp[nowx][nowy])
            if cnt==5:
                if not visit.get(nst):
                    visit[nst]=1
                    res[0]+=1
            else:
                queue.append([nowx, nowy, nst])
                count.append(cnt+1)
            
mp=[]
for _ in range(5):
    mp.append(list(map(int, sys.stdin.readline().split())))
res=[0]
visit=dict()
for i in range(5):
    for j in range(5):
        bfs(res, mp, i, j, visit)

print(res[0])
