import sys

def BFS(N, house, visit, x, y):
    queue=[[x,y]]
    count=1
    visit[x][y]=1
    while True:
        if len(queue)==0:
            break
        now=queue.pop(0)
        if now[1]-1>=0:
            if house[now[0]][now[1]-1]=='1' and visit[now[0]][now[1]-1]==0:
                visit[now[0]][now[1]-1]=1
                queue.append([now[0], now[1]-1])
                count+=1
        if now[0]-1>=0:
            if house[now[0]-1][now[1]]=='1' and visit[now[0]-1][now[1]]==0:
                visit[now[0]-1][now[1]]=1
                queue.append([now[0]-1, now[1]])
                count+=1
        if now[1]+1<N:
            if house[now[0]][now[1]+1]=='1' and visit[now[0]][now[1]+1]==0:
                visit[now[0]][now[1]+1]=1
                queue.append([now[0], now[1]+1])
                count+=1
        if now[0]+1<N:
            if house[now[0]+1][now[1]]=='1' and visit[now[0]+1][now[1]]==0:
                visit[now[0]+1][now[1]]=1
                queue.append([now[0]+1, now[1]])
                count+=1
    return count
N=int(sys.stdin.readline())
house=[]
visit=[]
for i in range(N):
    tmp=list(sys.stdin.readline())
    house.append(tmp)
    tmp=[0]*N
    visit.append(tmp)
res=[]
for i in range(N):
    for j in range(N):
        if visit[i][j]==0 and house[i][j]=='1':
            r=BFS(N, house, visit, i, j)
            res.append(r)
print(len(res))
res.sort()
for i in range(len(res)):
    print(res[i])