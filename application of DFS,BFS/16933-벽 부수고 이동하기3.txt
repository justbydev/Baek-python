import sys
from collections import deque

def bfs(N, M, K, mp):
    queue=deque()
    visit=[[[0]*M for _ in range(N)] for _ in range(K+1)]
    queue.append([0, 0, 0, 1])
    day=0
    visit[0][0][0]=1
    dx=[0, -1, 0, 1]
    dy=[-1, 0, 1, 0]
    while queue:
        l=len(queue)
        for _ in range(l):
            now=queue.popleft()
            for i in range(4):
                nowx=now[0]+dx[i]
                nowy=now[1]+dy[i]
                if nowx<0 or nowx>=N or nowy<0 or nowy>=M:
                    continue
                if nowx==N-1 and nowy==M-1:
                    return now[3]+1
                if mp[nowx][nowy]=='0' and visit[now[2]][nowx][nowy]==0:
                    visit[now[2]][nowx][nowy]=1
                    queue.append([nowx, nowy, now[2], now[3]+1])
                    continue
                if visit[now[2]][nowx][nowy]==0 and now[2]<K:
                    if day==0:
                        visit[now[2]][nowx][nowy]=1
                        queue.append([nowx, nowy, now[2]+1, now[3]+1])
                    else:
                        queue.append([now[0], now[1], now[2], now[3]+1])
        day=1-day
    return -1
            
N,M,K=map(int, sys.stdin.readline().split())
mp=[]
for _ in range(N):
    mp.append(list(sys.stdin.readline().rstrip()))
if N==1 and M==1:
    print(1)
else:
    print(bfs(N, M, K, mp))