import sys
from collections import deque

def bfs(N, num):
    queue=deque()
    count=deque()
    if N==2:
        queue.append([N, num[0], num[1]])
    else:
        queue.append([N, num[0], num[1], num[2]])
    count.append(0)
    while queue:
        now=queue.popleft()
        cnt=count.popleft()
        real=[]
        flag=1
        l=now[0]
        for i in range(1, l+1):
            if now[i]>0:
                flag=0
                real.append(now[i])
        if flag==1:
            return cnt
        l=len(real)
        if l==1:
            queue.append([1, real[0]-9])
            count.append(cnt+1)
        elif l==2:
            queue.append([2, real[0]-9, real[1]-3])
            queue.append([2, real[0]-3, real[1]-9])
            count.append(cnt+1)
            count.append(cnt+1)
        elif l==3:
            queue.append([3, real[0]-9, real[1]-3, real[2]-1])
            queue.append([3, real[0]-9, real[1]-1, real[2]-3])
            queue.append([3, real[0]-3, real[1]-9, real[2]-1])
            queue.append([3, real[0]-3, real[1]-1, real[2]-9])
            queue.append([3, real[0]-1, real[1]-9, real[2]-3])
            queue.append([3, real[0]-1, real[1]-3, real[2]-9])
            for i in range(6):
                count.append(cnt+1)
            

N=int(sys.stdin.readline())
num=list(map(int, sys.stdin.readline().split()))
if N==1:
    if num[0]%9==0:
        print(num[0]//9)
    else:
        print(num[0]//9+1)
else:
    print(bfs(N, num))