import sys
from collections import deque
sys.setrecursionlimit(10**8)
def bfs(stx, sty, edx, edy, w, h, room):
    queue=deque()
    count=deque()
    dx=[0, -1, 0, 1]
    dy=[-1, 0, 1, 0]
    visit=[[0]*w for _ in range(h)]
    visit[stx][sty]=1
    queue.append([stx, sty])
    count.append(0)
    while len(queue):
        now=queue.popleft()
        cnt=count.popleft()
        for i in range(4):
            nx=now[0]+dx[i]
            ny=now[1]+dy[i]
            if nx==edx and ny==edy:
                return cnt+1
            if nx<0 or nx>=h or ny<0 or ny>=w or room[nx][ny]=='x' or visit[nx][ny]==1:
                continue
            queue.append([nx,ny])
            count.append(cnt+1)
            visit[nx][ny]=1
    return -1
def dfs(st, ed, num, length, res, total):
    if total>=res[0]:
        return
    if st==ed:
        res[0]=min(res[0], total)
        return
    for i in range(st, ed):
        num[st],num[i]=num[i],num[st]
        if st!=0:
            dfs(st+1, ed, num, length, res, total+length[num[st-1]][num[st]])
        else:
            dfs(st+1, ed, num, length, res, total+length[0][num[0]])
        num[st],num[i]=num[i],num[st]

while True:
    w,h=map(int, sys.stdin.readline().split())
    if w==h==0:
        break
    room=[]
    robotx=0
    roboty=0
    dirty=1
    dr=dict()
    for _ in range(h):
        room.append(list(sys.stdin.readline()))
    for i in range(h):
        for j in range(w):
            if room[i][j]=='o':
                robotx=i
                roboty=j
            elif room[i][j]=='*':
                dr[dirty]=[i,j]
                dirty+=1
    length=[[0]*dirty for _ in range(dirty)]
    for i in range(1, dirty):
        length[0][i]=length[i][0]=bfs(robotx, roboty, dr[i][0], dr[i][1], w, h, room)
        if length[0][i]==-1:
            print(-1)
            break
    if length[0][i]==-1:
        continue
    dirty-=1
    for i in range(1, dirty):
        for j in range(i+1, dirty+1):
            length[i][j]=length[j][i]=bfs(dr[i][0], dr[i][1], dr[j][0], dr[j][1], w, h, room)
    num=[i for i in range(1, dirty+1)]
    res=[10000000000]
    dfs(0, dirty, num, length, res, 0)
    print(res[0])