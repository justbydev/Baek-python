import sys
from collections import deque

def bfs(mp, stx, sty, H, W):
    queue=deque()
    count=deque()
    dx=[0, -1, 0, 1]
    dy=[-1, 0, 1, 0]
    queue.append([stx, sty])
    count.append(0)
    visit=[[0]*W for _ in range(H)]
    visit[stx][sty]=1
    res=0
    while queue:
        now=queue.popleft()
        cnt=count.popleft()
        for i in range(4):
            nx=now[0]+dx[i]
            ny=now[1]+dy[i]
            if nx<0 or nx>=H or ny<0 or ny>=W:
                continue
            if visit[nx][ny]==1 or mp[nx][ny]=='W':
                continue
            queue.append([nx, ny])
            count.append(cnt+1)
            visit[nx][ny]=1
            res=max(res, cnt+1)
    return res
H,W=map(int, sys.stdin.readline().split())
mp=[]
for _ in range(H):
    mp.append(list(sys.stdin.readline().rstrip()))
res=-1
for i in range(H):
    for j in range(W):
        if mp[i][j]=='L':
            r=bfs(mp, i, j, H, W)
            if res==-1:
                res=r
            else:
                res=max(res, r)
print(res)