import sys
from collections import deque

def bfs(N, k, left, right):
    queue=deque()
    visit=[0]*N
    visit2=[0]*N
    queue.append([0, 0])
    end=deque()
    end.append(0)
    visit[0]=1
    while queue:
        now=queue.popleft()
        st=end.popleft()
        if now[0]+1>=N:
            return 1
        if now[0]+k>=N:
            return 1
        if now[1]==0:
            if visit[now[0]+1]==0 and left[now[0]+1]=='1':
                queue.append([now[0]+1, now[1]])
                visit[now[0]+1]=1
                end.append(st+1)
            if visit2[now[0]+k]==0 and right[now[0]+k]=='1':
                queue.append([now[0]+k, 1])
                visit2[now[0]+k]=1
                end.append(st+1)
            if now[0]-1>st and visit[now[0]-1]==0 and left[now[0]-1]=='1':
                queue.append([now[0]-1, now[1]])
                visit[now[0]-1]=1
                end.append(st+1)
        else:
            if visit2[now[0]+1]==0 and right[now[0]+1]=='1':
                queue.append([now[0]+1, now[1]])
                visit2[now[0]+1]=1
                end.append(st+1)
            if visit[now[0]+k]==0 and left[now[0]+k]=='1':
                queue.append([now[0]+k, 0])
                visit[now[0]+k]=1
                end.append(st+1)
            if now[0]-1>st and visit2[now[0]-1]==0 and right[now[0]-1]=='1':
                queue.append([now[0]-1, now[1]])
                visit2[now[0]-1]=1
                end.append(st+1)
    return 0
        
N,k=map(int, sys.stdin.readline().split())
left=list(sys.stdin.readline().rstrip())
right=list(sys.stdin.readline().rstrip())
print(bfs(N, k, left, right))