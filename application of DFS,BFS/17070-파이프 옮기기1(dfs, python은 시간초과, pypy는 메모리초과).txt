import sys
from collections import deque
sys.setrecursionlimit(10**8)
def dfs(N, mp, res, x, y, dr):
    if x==N-1 and y==N-1:
        res[0]+=1
        return
    if dr==0:
        if y+1<N and mp[x][y+1]==0:
            dfs(N, mp, res, x, y+1, 0)
        if x+1<N and y+1<N and mp[x+1][y+1]==0 and mp[x+1][y]==0 and mp[x][y+1]==0:
            dfs(N, mp, res, x+1, y+1, 2)
    elif dr==1:
        if x+1<N and mp[x+1][y]==0:
            dfs(N, mp, res, x+1, y, 1)
        if x+1<N and y+1<N and mp[x+1][y+1]==0 and mp[x+1][y]==0 and mp[x][y+1]==0:
            dfs(N, mp, res, x+1, y+1, 2)
    elif dr==2:
        if y+1<N and mp[x][y+1]==0:
            dfs(N, mp, res, x, y+1, 0)
        if x+1<N and mp[x+1][y]==0:
            dfs(N, mp, res, x+1, y, 1)
        if x+1<N and y+1<N and mp[x+1][y+1]==0 and mp[x+1][y]==0 and mp[x][y+1]==0:
            dfs(N, mp, res, x+1, y+1, 2)
N=int(sys.stdin.readline())
mp=[]
for _ in range(N):
    mp.append(list(map(int, sys.stdin.readline().split())))
res=[0]
dfs(N, mp, res, 0, 1, 0)
print(res[0])