import sys

def dfs(N, num, res, cnt):
    flag=1
    now=[]
    for i in range(N):
        if num[i]>0:
            flag=0
            now.append(num[i])
    if flag==1:
        if res[0]==-1:
            res[0]=cnt
        else:
            res[0]=min(res[0], cnt)
        return
    N=len(now)
    if N==1:
        if res[0]==-1:
            if now[0]%9==0:
                res[0]=cnt+now[0]//9
            else:
                res[0]=cnt+now[0]//9+1
        else:
            if now[0]%9==0:
                res[0]=min(res[0], cnt+now[0]//9)
            else:
                res[0]=min(res[0], cnt+now[0]//9+1)          
    elif N==2:
        dfs(N, [now[0]-9, now[1]-3], res, cnt+1)
        dfs(N, [now[0]-3, now[1]-9], res, cnt+1)
    else:
        dfs(N, [now[0]-9, now[1]-3, now[2]-1], res, cnt+1)
        dfs(N, [now[0]-9, now[1]-1, now[2]-3], res, cnt+1)
        dfs(N, [now[0]-3, now[1]-9, now[2]-1], res, cnt+1)
        dfs(N, [now[0]-3, now[1]-1, now[2]-9], res, cnt+1)
        dfs(N, [now[0]-1, now[1]-9, now[2]-3], res, cnt+1)
        dfs(N, [now[0]-1, now[1]-3, now[2]-9], res, cnt+1)

N=int(sys.stdin.readline())
num=list(map(int, sys.stdin.readline().split()))
if N==1:
    if num[0]%9==0:
        print(num[0]//9)
    else:
        print(num[0]//9+1)
else:
    res=[-1]
    dfs(N, num, res, 0)
    print(res[0])