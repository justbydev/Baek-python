import sys
from collections import deque

def bfs(N, graph, res):
    queue=deque()
    queue.append(1)
    visit=[0]*(N+1)
    visit[1]=1
    index=1
    nw=[1]
    while queue:
        now=queue.popleft()
        while True:
            if index>=N:
                break
            if graph[now].get(res[index]):
                queue.append(res[index])
                nw.append(res[index])
                index+=1
            else:
                break
        if index>N:
            break
    if res==nw:
        return 1
    else:
        return 0
        
N=int(sys.stdin.readline())
graph=[dict() for _ in range(N+1)]
for _ in range(N-1):
    st,ed=map(int, sys.stdin.readline().split())
    graph[st][ed]=1
    graph[ed][st]=1
res=list(map(int, sys.stdin.readline().split()))
r=bfs(N, graph, res)
print(r)