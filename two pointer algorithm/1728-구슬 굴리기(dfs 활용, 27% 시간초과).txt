import sys
sys.setrecursionlimit(10**8)
def dfs(N, mp, visit, gap, before, line):
    if line>N:
        if gap==-1:
            return 1
        else:
            return gap
    for i in range(N):
        if mp[line][i]-before<gap:
            continue
        if mp[line][i]-before>gap:
            return -1
        if visit[line][i]==0 and mp[line][i]-before==gap:
            visit[line][i]=1
            res=dfs(N, mp, visit, gap, mp[line][i], line+1)
            if gap==-1:
                if res==0:
                    visit[line][i]=0
                elif res==1:
                    return 1
            else:
                if res==-1:
                    visit[line][i]=0
                else:
                    return res
    if gap==-1:
        return 0
    else:
        return -1
            
N=int(sys.stdin.readline())
mp=[]
for _ in range(N+1):
    mp.append(list(map(int, sys.stdin.readline().split())))
for i in range(N+1):
    mp[i].sort()
visit=[[0]*N for _ in range(N+1)]
time=[0]*N
for i in range(N):
    now=mp[0][i]
    for j in range(N):
        if visit[1][j]==0:
            gap=mp[1][j]-now
            visit[1][j]=1
            res=dfs(N, mp, visit, gap, mp[1][j], 2)
            if gap==-1:
                if res==0:
                    visit[1][j]=0
                else:
                    time[i]=gap
                    break
            else:
                if res==-1:
                    visit[1][j]=0
                else:
                    time[i]=res
                    break

for i in range(N):
    print(mp[0][i], time[i])