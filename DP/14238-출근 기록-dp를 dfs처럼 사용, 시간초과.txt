import sys

def dfs(dp, num, total, a, b, c, backb, backc, backbackc, ans):
    if a+b+c==total:
        return 1
    tempb=backb
    tempc=backc
    tempcc=backbackc
    if a+1<=num[0]:
        if dp[a+1][b][c]==0:
            dp[a+1][b][c]=1
            ans.append('A')
            if tempb==1:
                backb=0
            if tempc==1:
                backc=0
                backbackc=1
            else:
                if tempcc==1:
                    backbackc=0
            if(dfs(dp, num, total, a+1, b, c, backb, backc, backbackc, ans)):
                return 1
            else:
                ans.pop()
                dp[a+1][b][c]=0
    if b+1<=num[1]:
        if dp[a][b+1][c]==0 and tempb==0:
            dp[a][b+1][c]=1
            ans.append('B')
            backb=1
            if tempc==1:
                backc=0
                backbackc=1
            else:
                if tempcc==1:
                    backbackc=0
            if(dfs(dp, num, total, a, b+1, c, backb, backc, backbackc, ans)):
                return 1
            else:
                ans.pop()
                dp[a][b+1][c]=0
    if c+1<=num[2]:
        if dp[a][b][c+1]==0 and tempc==0 and tempcc==0:
            dp[a][b][c+1]=1
            ans.append('C')
            backc=1
            if tempb==1:
                backb=0
            if(dfs(dp, num, total, a, b, c+1, backb, backc, backbackc, ans)):
                return 1
            else:
                ans.pop()
                dp[a][b][c+1]=0
    return 0
S=list(sys.stdin.readline().rstrip())
num=[0]*3
for i in range(len(S)):
    if S[i]=='A':
        num[0]+=1
    elif S[i]=='B':
        num[1]+=1
    elif S[i]=='C':
        num[2]+=1
ans=[]
dp=[[[0]*51 for _ in range(51)] for _ in range(51)]
dp[0][0][0]=1
r=dfs(dp, num, len(S), 0, 0, 0, 0, 0, 0, ans)
if r==0:
    print(-1)
elif r==1:
    for i in range(len(S)):
        print(ans[i], end='')
    print()