import sys
from collections import deque
sys.setrecursionlimit(10**8)

def dfs(visit, n, tree, i, j):
    dx=[0, -1, 0, 1]
    dy=[-1, 0, 1, 0]
    r=0
    for k in range(4):
        nowx=i+dx[k]
        nowy=j+dy[k]
        if nowx<0 or nowx>=n or nowy<0 or nowy>=n or tree[i][j]>=tree[nowx][nowy]:
            continue
        if visit[nowx][nowy]!=0:
            r=max(r, visit[nowx][nowy])
            continue
        r=max(r, dfs(visit, n, tree, nowx, nowy))
    visit[i][j]=r+1
    return visit[i][j]
n=int(sys.stdin.readline())
tree=[]
for _ in range(n):
    tree.append(list(map(int, sys.stdin.readline().split())))
visit=[[0]*n for _ in range(n)]
for i in range(n):
    for j in range(n):
        if visit[i][j]==0:
            dfs(visit, n, tree, i, j)
res=0
for i in range(n):
    for j in range(n):
        res=max(res, visit[i][j])
print(res)